-- CREATE TABLE DEPARTMENT
-- (
--    DEPTCODE   INTEGER PRIMARY KEY,
--    DeptName   CHAR(30),
--    LOCATION   VARCHAR(33) UNIQUE
-- );

-- CREATE TABLE EMPLOYEE
-- (
--    EmpCode      INTEGER NOT NULL PRIMARY KEY,
--    EmpFName     VARCHAR(15) NOT NULL,
--    EmpLName     VARCHAR(15) NOT NULL,
--    Job          VARCHAR(45),
--    Manager      CHAR(4),
--    HireDate     DATE,
--    Salary       DECIMAL DEFAULT 0,
--    Commission   INTEGER,
--    Department_code     INTEGER REFERENCES DEPARTMENT (DEPTCODE)
-- );

-- CREATE SEQUENCE DEPTCODE_INCREMENT
-- START 10
-- INCREMENT 10
-- MINVALUE 10
-- OWNED BY DEPARTMENT.DEPTCODE;




-- INSERT INTO DEPARTMENT (DEPTCODE,DeptName,LOCATION) VALUES 
-- (nextval('DEPTCODE_INCREMENT'),'FINANCE', 'EDINBURGH'),
-- (nextval('DEPTCODE_INCREMENT'),'SOFTWARE','PADDINGTON'),
-- (nextval('DEPTCODE_INCREMENT'),'SALES', 'MAIDSTONE'),
-- (nextval('DEPTCODE_INCREMENT'),'MARKETING', 'DARLINGTON'),
-- (nextval('DEPTCODE_INCREMENT'),'ADMIN', 'BIRMINGHAM');

-- INSERT INTO EMPLOYEE (EmpCode,EmpFName,EmpLName,Job,Manager,HireDate,Salary,Commission,Department_code)
-- VALUES (9369, 'TONY', 'STARK', 'SOFTWARE ENGINEER', 7902, '1980-12-17', 2800,0,20),
--        (9499, 'TIM', 'ADOLF', 'SALESMAN', 7698, '1981-02-20', 1600, 300,30),    
--        (9566, 'KIM', 'JARVIS', 'MANAGER', 7839, '1981-04-02', 3570,0,20),
--        (9654, 'SAM', 'MILES', 'SALESMAN', 7698, '1981-09-28', 1250, 1400, 30),
--        (9782, 'KEVIN', 'HILL', 'MANAGER', 7839, '1981-06-09', 2940,0,10),
--        (9788, 'CONNIE', 'SMITH', 'ANALYST', 7566, '1982-12-09', 3000,0,20),
--        (9839, 'ALFRED', 'KINSLEY', 'PRESIDENT', 7566, '1981-11-17', 5000,0, 10),
--        (9844, 'PAUL', 'TIMOTHY', 'SALESMAN', 7698, '1981-09-08', 1500,0,30),
--        (9876, 'JOHN', 'ASGHAR', 'SOFTWARE ENGINEER', 7788, '1983-01-12',3100,0,20),
--        (9900, 'ROSE', 'SUMMERS', 'TECHNICAL LEAD', 7698, '1981-12-03', 2950,0, 20),
--        (9902, 'ANDREW', 'FAULKNER', 'ANALYST', 7566, '1981-12-03', 3000,0, 10),
--        (9934, 'KAREN', 'MATTHEWS', 'SOFTWARE ENGINEER', 7782, '1982-01-23', 3300,0,20),
--        (9591, 'WENDY', 'SHAWN', 'SALESMAN', 7698, '1981-02-22', 500,0,30),
--        (9698, 'BELLA', 'SWAN', 'MANAGER', 7839, '1981-05-01', 3420, 0,30),
--        (9777, 'MADII', 'HIMBURY', 'ANALYST', 7839, '1981-05-01', 2000, 200, NULL),
--        (9860, 'ATHENA', 'WILSON', 'ANALYST', 7839, '1992-06-21', 7000, 100, 50),
--        (9861, 'JENNIFER', 'HUETTE', 'ANALYST', 7839, '1996-07-01', 5000, 100, 50);


SELECT * FROM DEPARTMENT
SELECT * FROM EMPLOYEE
--PART 3

--1
SELECT COUNT(*) FROM EMPLOYEE WHERE Department_code = 10
--2
SELECT COUNT(*) FROM EMPLOYEE WHERE Department_code = 10 
AND Job = 'MANAGER'
--3
CREATE or REPLACE FUNCTION fullname(fn varchar(50), lan varchar(100)) RETURNS VARCHAR(100) AS $fullname$
BEGIN
   RETURN(SELECT CONCAT(EmpFName, ' ', EmpLName) FROM EMPLOYEE WHERE EMPLOYEE.EmpFName = fn AND EMPLOYEE.EmpLName=lan);
END;
$fullname$ LANGUAGE plpgsql;

SELECT fullname(EMPLOYEE.EmpFName,EMPLOYEE.EmpLName),Job,LOCATION FROM DEPARTMENT
JOIN EMPLOYEE ON EMPLOYEE.Department_code = DEPARTMENT.DEPTCODE

--4
SELECT AVG(salary) FROM EMPLOYEE
WHERE JOB = 'SOFTWARE ENGINEER'

--5
SELECT fullname(EMP.EmpFName,EMP.EmpLName),
EMP.Department_code,DEP.DEPTNAME,DEP.LOCATION
FROM DEPARTMENT AS DEP JOIN EMPLOYEE AS EMP
ON DEP.DEPTCODE = EMP.Department_code
ORDER BY EMP.EMPFNAME ASC ,DEP.LOCATION ASC

--6
SELECT fullname(EMP.EmpFName,EMP.EmpLName),
(EMP.Salary - EMP.Commission) AS "TOTAL SALARY" 
FROM EMPLOYEE AS EMP

--7
SELECT MAX(salary) FROM EMPLOYEE
--8
SELECT * FROM EMPLOYEE LEFT JOIN DEPARTMENT
ON EMPLOYEE.Department_code = DEPARTMENT.DEPTCODE
WHERE EMPLOYEE.empcode = 9777

--PART 4

--1 
CREATE TABLE Boss 
(
	boss_id SERIAL PRIMARY KEY,
	boss_name VARCHAR(50),
	boss_type VARCHAR(50),
	dept_number INT REFERENCES DEPARTMENT(DEPTCODE) UNIQUE
	
)
SELECT * FROM boss
SELECT * FROM DEPARTMENT

INSERT INTO BOSS (boss_name,boss_type,dept_number)
VALUES
('Denis','nice',10),
('Not Denis','angry',30),
('Half of the Denis','not exist',40);

SELECT boss_name,boss_type,DeptName FROM boss
JOIN DEPARTMENT ON boss.dept_number = DEPARTMENT.DEPTCODE
WHERE DEPARTMENT.DeptName = 'FINANCE'